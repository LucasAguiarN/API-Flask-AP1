swagger: "2.0"
info:
  title: School Manager API
  description: Documentação para utilização do School Manager API
  version: "1.0.0"

host: localhost:5000
basePath: /
schemes:
  - http

tags:
  - name: Alunos
    description: Operações Relacionadas a Entidade Alunos

definitions:
  Aluno:
    type: object
    properties:
      id:
        type: integer
        example: 1
      nome:
        type: string
        example: "Lucas"
      idade:
        type: integer
        example: 27
      data_nasc:
        type: string
        format: date
        example: "18/11/1998"
      nota_1semestre:
        type: number
        example: 10
      nota_2semestre:
        type: number
        example: 8
      media:
        type: number
        example: 8
      turma_id:
        type: integer
        example: 1

  AlunoInput:
    type: object
    required: [nome, idade, data_nasc, nota_1semestre, nota_2semestre, turma_id]
    properties:
      nome:
        type: string
        example: "Lucas"
      idade:
        type: integer
        example: 27
      data_nasc:
        type: string
        format: date
        example: "18/11/1998"
      nota_1semestre:
        type: number
        example: 10
      nota_2semestre:
        type: number
        example: 9
      turma_id:
        type: integer
        example: 1

paths:
  /alunos:
    get:
      tags:
        - Alunos
      summary: Listar Alunos Cadastrados
      operationId: getAlunos
      description: Retorna uma lista de todos os alunos cadastrados no sistema e suas informações ou retorna uma mensagem informando que a lista está vazia
      responses:
        200:
          description: Lista de alunos cadastrados com dados
          schema:
            type: array
            items:
              $ref: '#/definitions/Aluno'
        404:
          description: Nenhum aluno encontrado
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Lista de Alunos Vazia!"
    post:
      tags:
        - Alunos
      summary: Cadastrar Aluno
      operationId: createAluno
      description: Cadastar Aluno no sistema e retornar mensagem confirmando o cadastro ou retorna mensagem referente aos erros de Body incompleto; Turma não cadastrada ou Aluno já cadastrado
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AlunoInput'
      responses:
        201:
          description: Aluno Cadastrado
          schema:
            type: object
            properties:
              Mensagem:
                type: string
                example: "Aluno Cadastrado com Sucesso!"
        400:
          description: Dados faltando no corpo da requisição
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Formulário Incompleto!"
        404:
          description: Turma informada não cadastrada
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Turma Não Cadastrada!"
        409:
          description: Aluno já cadastrado
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Aluno Já Cadastrado!"
              
  /alunos/{aluno_id}:
    get:
      tags:
        - Alunos
      summary: Exibir Aluno Específico
      operationId: getAlunoById
      description: Retorna informações de Aluno cadastrado ou retorna uma mensagem informando que não encontrou esse aluno
      parameters:
        - name: aluno_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Aluno encontrado no sistema
          schema:
            $ref: '#/definitions/Aluno'
        404:
          description: Nenhum aluno encontrado com esse ID
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Aluno Não Cadastrado!"
    put:
      tags:
        - Alunos
      summary: Atualizar Cadastro Aluno
      operationId: updateAluno
      description: Atualizar cadastro de Aluno no sistema e retornar mensagem confirmando a atualização ou retorna mensagem referente aos erros de Body incompleto ou Turma não cadastrada
      parameters:
        - name: aluno_id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AlunoInput'
      responses:
        200:
          description: Cadastro Aluno Atualizado
          schema:
            type: object
            properties:
              Mensagem:
                type: string
                example: "Aluno Atualizado com Sucesso!"
        400:
          description: Dados faltando no corpo da requisição
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Formulário Incompleto!"
        404:
          description: Turma informada não cadastrada
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Turma Não Cadastrada!"
    delete:
      tags:
        - Alunos
      summary: Deletar Cadastro Aluno
      operationId: deleteAluno
      description: Deletar cadastro de Aluno no sistema e retornar mensagem confirmando a exclusão ou retorna mensagem referente ao erros de Body incompleto ou Turma não cadastrada
      parameters:
        - name: aluno_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Cadastro Aluno Deletado
          schema:
            type: object
            properties:
              Mensagem:
                type: string
                example: "Aluno Deletado com Sucesso!"
        404:
          description: Nenhum aluno encontrado com esse ID
          schema:
            type: object
            properties:
              Erro:
                type: string
                example: "Aluno Não Cadastrado!"

# tags - Agrupar Endpoints (Alunos, Turmas, Professores)
# parameters - Parametros da Rota - POST/PUT
  # pode ter name; in; type; required; description
  # in: path - parametro na URL
  # in: body - JSON enviado
# schema - formato de entrada e saída JSON
  # type: object or array
  # properties: campos que pertencem ao objeto
  # required
  # example: exemplo de valor
# responses define http esperado e formato de resposta

# http
  # 200 - Sucesso GET / PUT / DELETE
  # 201 - Sucesso POST
  # 400 - Erro de Validação - Dados Insuficientes
  # 404 - Não encotrar recurso - Lista Vazia ou usuario ñ encontrado
  # 409 - já cadastrado